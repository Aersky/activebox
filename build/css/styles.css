@charset "UTF-8";

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/* Slider */

.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.slick-track:before,
.slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

/* Slider */

.slick-loading .slick-list {
  background: #fff url('./ajax-loader.gif') center center no-repeat;
}

/* Arrows */

/* Dots */

.slick-dotted .slick-slider {
  margin-bottom: 30px;
}

.slick-dots {
  position: absolute;
  bottom: -25px;
  list-style: none;
  display: block;
  text-align: center;
  padding: 0;
  margin: 0;
  width: 100%;
}

.slick-dots li {
  position: relative;
  display: inline-block;
  height: 20px;
  width: 20px;
  margin: 0 5px;
  padding: 0;
  cursor: pointer;
}

.slick-dots li button {
  border: 0;
  background: transparent;
  display: block;
  height: 20px;
  width: 20px;
  outline: none;
  line-height: 0px;
  font-size: 0px;
  color: transparent;
  padding: 5px;
  cursor: pointer;
}

.slick-dots li button:hover,
.slick-dots li button:focus {
  outline: none;
}

.slick-dots li button:hover:before,
.slick-dots li button:focus:before {
  opacity: 1;
}

.slick-dots li button:before {
  position: absolute;
  top: 0;
  left: 0;
  content: "â€¢";
  width: 20px;
  height: 20px;
  font-family: "slick";
  font-size: 6px;
  line-height: 20px;
  text-align: center;
  color: black;
  opacity: 0.25;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.slick-dots li.slick-active button:before {
  color: black;
  opacity: 0.75;
}

.fixed .header-inner {
  height: auto;
}

.header {
  background-color: #2c314f;
  border-bottom: 1px solid rgba(255, 255, 255, 0.25);
}

.header.fixed {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 5;
}

.header.fixed:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #2c314f;
  z-index: 3;
}

.header-inner {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: 0;
  margin-right: 0;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  height: 80px;
  padding: 10px 0;
}

.header-nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: 0;
  margin-right: 0;
  -webkit-box-align: end;
  -webkit-align-items: end;
  align-items: end;
  position: relative;
  z-index: 5;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  overflow: auto;
}

.header-nav a {
  font-family: 'RalewayBold', sans-serif;
  font-size: 13px;
  font-weight: 700;
  text-decoration: none;
  text-align: right;
  color: #fff;
  text-transform: uppercase;
  opacity: 0.75;
  -webkit-transition: opacity, color 0.2s linear;
  transition: opacity, color 0.2s linear;
}

.header-nav a:hover {
  opacity: 1;
  color: #e84545;
}

.header-nav li + li {
  padding-left: 20px;
}

.header-nav.active {
  top: 0;
}

.intro-logo {
  position: relative;
  z-index: 4;
}

.intro {
  background: #2c314f url("../img/intro-bg.jpg") center no-repeat;
  background-size: cover;
  height: 100vh;
}

.intro-inner {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  height: 100vh;
  padding-top: 50px;
}

.intro-content {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.intro-va-container {
  text-align: center;
  color: #fff;
  max-width: 900px;
  margin: 0 auto;
}

.intro-title {
  font-family: 'OpenSansBold', sans-serif;
  font-size: 65px;
  font-weight: 700;
  line-height: 1.1;
  text-transform: uppercase;
  margin-bottom: 30px;
}

.intro-suptitle {
  font-family: 'RalewayRegular', sans-serif;
  font-size: 22px;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 40px;
}

.features {
  margin: 100px 0;
}

.features-inner {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.features-item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(33.333333333333336% - 30px);
  text-align: center;
  padding: 0 20px;
}

.features-item .icon {
  margin-bottom: 35px;
}

.features-item .icon img {
  margin: 0 auto;
}

.features-item .title {
  text-transform: uppercase;
  font-family: 'RalewayBold', sans-serif;
  font-size: 16px;
  font-weight: 700;
  line-height: 25px;
  color: #000000;
  margin-bottom: 20px;
}

.features-item .content {
  font-family: 'RalewayRegular', sans-serif;
  font-size: 16px;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 50px;
}

.work {
  margin-bottom: 100px;
}

.work-inner {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: 0px;
  margin-right: 0px;
  max-width: 1900px;
  margin: 0 auto;
}

.work-item {
  width: calc(100% / 12 * 3 - 0px);
  position: relative;
  overflow: hidden;
  height: 350px;
  border-left: 1px solid #fff;
  border-bottom: 1px solid #fff;
}

.work-img {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  z-index: 1;
  max-width: none;
}

.work-description {
  opacity: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 2;
  background-color: rgba(232, 69, 69, 0.8);
  text-align: center;
  -webkit-transition: opacity 0.2s linear;
  transition: opacity 0.2s linear;
}

.work-description:hover {
  opacity: 1;
}

.work-description-text {
  font-family: 'RalewayRegular', sans-serif;
  font-size: 14px;
  font-weight: 500;
  line-height: 1.2;
  color: #fff;
  opacity: 0.7;
}

.work-description-header {
  text-transform: uppercase;
  font-family: 'RalewayRegular', sans-serif;
  font-size: 14px;
  font-weight: 700;
  line-height: 1.2;
  color: #fff;
  margin-bottom: 10px;
}

.team-inner {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.team-item {
  margin: 0 auto;
}

.team-item-inner {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(25% - 30px);
}

.team-item-img {
  max-width: 100%;
  margin-bottom: 20px;
}

.team-item-name {
  font-family: 'RalewayRegular', sans-serif;
  font-size: 22px;
  font-weight: 500;
  line-height: 1.2;
  color: #000;
  margin-bottom: 8px;
}

.team-item-prof {
  margin-bottom: 20px;
  color: #be3939;
  font-size: 13px;
  text-transform: uppercase;
}

.team-item-text {
  font-family: 'RalewayRegular', sans-serif;
  font-size: 14px;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 20px;
}

.social-icons {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  margin-bottom: 20px;
}

.social-icons a {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 40px;
  height: 40px;
  border: 1px solid #6c7279;
  border-radius: 3px;
  margin: 4px;
  cursor: pointer;
  -webkit-transition: color, background-color 0.1s linear;
  transition: color, background-color 0.1s linear;
  /* img{

             height: 18px;
            !* position: absolute;
             top: 50%;
             left: 50%;
             transform: translate3d(-50%,-50%,0);*!

         }*/
}

.social-icons a:hover {
  background-color: #6c7279;
  border: none;
}

.social-icons a:hover .social-icon {
  fill: #fff;
}

.social-icons a .social-icon {
  height: 18px;
  fill: #6c7279;
  -webkit-transition: fill 0.1s linear;
  transition: fill 0.1s linear;
}

.reviews-slide {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  margin: 0 auto;
  max-width: 2500px;
  background-color: #43416c;
}

.reviews-slide-photo {
  width: calc(100% / 12 * 6 - 0px);
}

.reviews-slide-photo img {
  margin-left: auto;
  max-width: 100%;
}

.reviews-slide-text {
  position: relative;
  max-width: 950px;
  width: calc(100% / 12 * 6 - 0px);
}

.reviews-slide-title {
  margin-bottom: 20px;
  color: #fff;
  font-weight: 500;
  font-style: italic;
  font-size: 29px;
  font-family: 'RalewayRegular', sans-serif;
  line-height: 1.2;
}

.reviews-slide-suptitle {
  color: #fff;
  text-transform: uppercase;
  font-weight: 500;
  font-size: 13px;
  font-family: 'RalewayBold', sans-serif;
  line-height: 1.2;
}

.slick-dots {
  bottom: 0;
  right: 0;
  width: 50%;
}

.slick-dots li.slick-active button:before {
  color: transparent;
}

.slick-dots li button:before {
  height: 3px;
  width: 20px;
  background-color: #fff;
  color: transparent;
}

.promo-inner {
  text-align: center;
  margin: 90px 0;
}

.promo-title {
  font-family: 'RalewayLight', sans-serif;
  font-size: 28px;
  font-weight: 300;
  line-height: 1.2;
  color: #000000;
  margin-bottom: 15px;
}

.promo-suptitle {
  font-family: 'RalewayBold', sans-serif;
  font-size: 14px;
  font-weight: 700;
  line-height: 1.2;
  color: #000000;
  text-transform: uppercase;
  margin-bottom: 25px;
}

.promo--btn {
  padding-left: 40px;
  padding-right: 40px;
}

.footer {
  color: #fff;
}

.footer-inner-up {
  background-color: #3a3e64;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  padding: 100px 30px;
}

.footer-item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(33.333333333333336% - 30px);
  text-align: center;
}

.footer-item-title {
  font-family: 'RalewayBold', sans-serif;
  font-size: 15px;
  font-weight: 700;
  line-height: 1.2;
  text-transform: uppercase;
  margin-bottom: 20px;
}

.footer-item-text {
  color: rgba(255, 255, 255, 0.51);
  font-style: normal;
  font-size: 14px;
  line-height: 1.5;
}

.footer-inner-down {
  background-color: #313454;
  text-align: center;
  padding: 20px 0;
  color: rgba(255, 255, 255, 0.5);
}

.footer-copyright {
  margin-bottom: 10px;
  font-family: 'RalewayRegular', sans-serif;
  font-size: 14px;
  font-weight: 500;
  line-height: 1.5;
}

.footer-made span {
  font-weight: bold;
  color: #fff;
}

.social--footer {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  margin-bottom: 0;
}

.social--footer a {
  border: 1px solid #fff;
}

.social--footer a:hover {
  background-color: #fff;
}

.social--footer a:hover .social-icon {
  fill: #3a3e64;
}

.social--footer a .social-icon {
  fill: #fff;
}

.burger {
  width: 80px;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  -webkit-transition: -webkit-transform 400ms;
  transition: -webkit-transform 400ms;
  transition: transform 400ms;
  transition: transform 400ms, -webkit-transform 400ms;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  display: none;
}

.burger .top {
  stroke-dasharray: 40 121;
}

.burger .bottom {
  stroke-dasharray: 40 121;
}

.burger.active .top {
  stroke-dashoffset: -68px;
}

.burger.active .bottom {
  stroke-dashoffset: -68px;
}

.burgerRotate.active {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.line {
  fill: none;
  -webkit-transition: stroke-dasharray 400ms, stroke-dashoffset 400ms;
  transition: stroke-dasharray 400ms, stroke-dashoffset 400ms;
  stroke: #fff;
  stroke-width: 5.5;
  stroke-linecap: round;
}

.header__burger {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 4;
}

.header__burger:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #5e5373;
  z-index: 3;
}

.header__content {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  height: 80px;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
}

.header__content .logo {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 189px;
  flex: 0 0 189px;
  position: relative;
  z-index: 4;
}

.header__menu {
  overflow: auto;
}

.header__list {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
}

.header__list li {
  list-style: none;
}

.header__list li + li {
  margin-left: 10px;
}

.header__link {
  position: relative;
  z-index: 4;
  color: #fff;
  font-size: 16px;
  font-weight: bold;
  text-transform: uppercase;
  text-decoration: none;
}

.burger__content {
  padding-top: 100px;
}

.burger__content__text {
  font-size: 18px;
  line-height: 1.3;
}

.burger__content__text p {
  margin: 10px 0;
}

.burger__menu {
  display: none;
  position: relative;
  z-index: 4;
}

.burger__menu.active:before {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  top: 9px;
}

.burger__menu.active:after {
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  bottom: 9px;
}

.burger__menu.active span {
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

@font-face {
  font-family: RalewayRegular;
  src: url('../fonts/RalewayRegular.eot') format('embedded-opentype');
  src: url('../fonts/RalewayRegular.ttf') format('truetype');
  src: url('../fonts/RalewayRegular.woff') format('woff2');
}

@font-face {
  font-family: RalewaySemiBold;
  src: url('../fonts/RalewaySemiBold.eot') format('embedded-opentype');
  src: url('../fonts/RalewaySemiBold.ttf') format('truetype');
  src: url('../fonts/RalewaySemiBold.woff') format('woff2');
}

@font-face {
  font-family: OpenSansBold;
  src: url('../fonts/OpenSansBold.eot') format('embedded-opentype');
  src: url('../fonts/OpenSansBold.ttf') format('truetype');
  src: url('../fonts/OpenSansBold.woff') format('woff2');
}

@font-face {
  font-family: RalewayBold;
  src: url('../fonts/RalewayBold.eot') format('embedded-opentype');
  src: url('../fonts/RalewayBold.ttf') format('truetype');
  src: url('../fonts/RalewayBold.woff') format('woff2');
}

@font-face {
  font-family: RalewayLight;
  src: url('../fonts/RalewayLight.eot') format('embedded-opentype');
  src: url('../fonts/RalewayLight.ttf') format('truetype');
  src: url('../fonts/RalewayLight.woff') format('woff2');
}

.degubGrid {
  height: 100vh;
  position: fixed;
  width: 100%;
}

.degubGrid > div {
  height: inherit;
  max-width: 1200px;
  margin: 0 auto;
  padding-left: 30px;
  padding-right: 30px;
}

.degubGrid > div > div {
  height: inherit;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.degubGrid > div > div > div {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(8.333333333333334% - 30px);
  height: inherit;
  outline: 1px solid #929200;
  background: rgba(0, 0, 0, 0.1);
}

.wrapper {
  max-width: 1200px;
  margin: 0 auto;
  padding-left: 30px;
  padding-right: 30px;
}

body {
  font-family: 'RalewayRegular', sans-serif;
  font-size: 14px;
  font-weight: 500;
  color: #6c7279;
  -webkit-font-smoothing: antialiased;
}

body .lock {
  overflow: hidden;
}

.btn {
  display: inline-block;
  padding: 15px 40px;
  border: none;
  border-radius: 3px;
  color: #fff;
  font-family: 'RalewayRegular', sans-serif;
  font-size: 13px;
  font-weight: 600;
  text-transform: uppercase;
  cursor: pointer;
  text-decoration: none;
  -webkit-transition: background-color 0.2s linear;
  transition: background-color 0.2s linear;
}

.btn:hover {
  background-color: #e63d3d;
}

.btn--color {
  background-color: #e84545;
}

@media screen and (min-width: 769px) {
  .reviews-slide-text-inner {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: auto;
    width: 70%;
    -webkit-transform: translate3d(-50%, -50%, 0);
    transform: translate3d(-50%, -50%, 0);
  }
}

@media screen and (max-width: 1200px) {
  .work-item {
    height: 250px;
  }
}

@media screen and (max-width: 960px) {
  .intro-title {
    font-size: 50px;
  }
}

@media screen and (max-width: 920px) {
  .intro-va-container {
    max-width: 700px;
  }

  .intro-title {
    font-size: 40px;
  }

  .features-inner {
    margin-left: -10px;
    margin-right: -10px;
  }

  .features-item {
    margin-left: 10px;
    margin-right: 10px;
  }

  .features-item {
    width: calc(50% - 20px);
  }

  .work-item {
    height: 200px;
  }

  .team-inner {
    margin-left: -10px;
    margin-right: -10px;
  }

  .team-item-inner {
    margin-left: 10px;
    margin-right: 10px;
  }

  .reviews-slide-title {
    font-size: 25px;
    margin-bottom: 10px;
  }

  .footer-item {
    margin-left: 10px;
    margin-right: 10px;
  }

  .degubGrid > div {
    padding-left: 20px;
    padding-right: 20px;
  }

  .degubGrid > div {
    padding-left: 20px;
    padding-right: 20px;
  }

  .degubGrid > div > div {
    margin-left: -10px;
    margin-right: -10px;
  }

  .degubGrid > div > div > div {
    margin-left: 10px;
    margin-right: 10px;
  }

  .degubGrid > div > div > div {
    width: calc(8.333333333333334% - 20px);
  }

  .wrapper {
    padding-left: 20px;
    padding-right: 20px;
  }
}

@media screen and (max-width: 768px) {
  .header-inner {
    padding: 0;
  }

  .header-nav {
    height: 100%;
    position: fixed;
    z-index: 1;
    top: -100%;
    left: 0;
    width: 100%;
    right: 0;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    background-color: #2c314f;
    padding-top: 93px;
  }

  .header-nav a {
    font-size: 20px;
    margin-left: 20px;
  }

  .header-nav li {
    margin: 10px 40px 10px;
  }

  .header-nav li + li {
    padding-left: 0;
    margin-top: 10px;
  }

  .intro {
    height: auto;
  }

  .intro-inner {
    height: auto;
  }

  .intro-va-container {
    padding: 100px 0;
  }

  .intro-title {
    font-size: 30px;
  }

  .intro-suptitle {
    font-size: 16px;
  }

  .features {
    margin: 70px 0;
  }

  .features-inner {
    margin-left: -7.5px;
    margin-right: -7.5px;
  }

  .features-item {
    margin-left: 7.5px;
    margin-right: 7.5px;
  }

  .team-inner {
    margin-left: -7.5px;
    margin-right: -7.5px;
  }

  .team-item-inner {
    margin-left: 7.5px;
    margin-right: 7.5px;
  }

  .team-item-inner {
    width: calc(25% - 15px);
  }

  .reviews-slide-photo {
    width: calc(100% / 12 * 12 - 0px);
  }

  .reviews-slide-text {
    width: calc(100% / 12 * 12 - 0px);
  }

  .reviews-slide-text-inner {
    display: block;
    padding: 50px 20px;
  }

  .slick-dots {
    bottom: 10px;
    right: auto;
    width: 100%;
  }

  .footer-inner-up {
    padding: 70px 0;
  }

  .footer-item {
    margin-left: 7.5px;
    margin-right: 7.5px;
  }

  .footer-item {
    width: calc(66.66666666666667% - 15px);
  }

  .footer-item + .footer-item {
    margin-top: 40px;
  }

  .burger {
    display: block;
    z-index: 4;
    width: 70px;
  }

  .header__content {
    height: 50px;
  }

  .header__menu {
    padding-top: 70px;
    position: fixed;
    width: 100%;
    top: -100%;
    left: 0;
    height: 100%;
    background-color: #18b5a4;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease;
  }

  .header__menu.active {
    top: 0;
  }

  .header__list {
    display: block;
    margin-left: 10px;
  }

  .header__list li + li {
    margin-left: 0;
    margin-top: 10px;
  }

  .header__link {
    font-size: 24px;
  }

  .burger__content {
    padding-top: 70px;
  }

  .lock {
    overflow: hidden;
  }

  .burger__menu {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 30px;
    flex: 0 0 30px;
    display: block;
    position: relative;
    width: 30px;
    height: 20px;
  }

  .burger__menu:before,
  .burger__menu:after {
    content: '';
    background-color: #fff;
    position: absolute;
    height: 2px;
    width: 100%;
    left: 0;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease;
  }

  .burger__menu:before {
    top: 0;
  }

  .burger__menu:after {
    bottom: 0;
  }

  .burger__menu span {
    position: absolute;
    background-color: #fff;
    left: 0;
    top: 9px;
    height: 2px;
    width: 100%;
    -webkit-transition: all 0.2s ease;
    transition: all 0.2s ease;
  }

  .degubGrid > div > div {
    margin-left: -7.5px;
    margin-right: -7.5px;
  }

  .degubGrid > div > div > div {
    margin-left: 7.5px;
    margin-right: 7.5px;
  }

  .degubGrid > div > div > div {
    width: calc(8.333333333333334% - 15px);
  }
}

@media screen and (max-width: 576px) {
  .features-inner {
    margin-left: -5px;
    margin-right: -5px;
  }

  .features-item {
    margin-left: 5px;
    margin-right: 5px;
  }

  .features-item {
    width: calc(100% - 10px);
  }

  .work-item {
    width: calc(100% / 12 * 6 - 0px);
    height: 250px;
  }

  .team-inner {
    margin-left: -5px;
    margin-right: -5px;
  }

  .team-item-inner {
    margin-left: 5px;
    margin-right: 5px;
  }

  .team-item-inner {
    width: calc(50% - 10px);
  }

  .reviews-slide-title {
    font-size: 19px;
  }

  .footer-inner-up {
    padding: 50px 0;
  }

  .footer-item {
    margin-left: 5px;
    margin-right: 5px;
  }

  .burger {
    width: 60px;
  }

  .degubGrid > div {
    padding-left: 10px;
    padding-right: 10px;
  }

  .degubGrid > div {
    padding-left: 10px;
    padding-right: 10px;
  }

  .degubGrid > div > div {
    margin-left: -5px;
    margin-right: -5px;
  }

  .degubGrid > div > div > div {
    margin-left: 5px;
    margin-right: 5px;
  }

  .degubGrid > div > div > div {
    width: calc(8.333333333333334% - 10px);
  }

  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media screen and (max-width: 420px) {
  .features-inner {
    margin-left: -2.5px;
    margin-right: -2.5px;
  }

  .features-item {
    margin-left: 2.5px;
    margin-right: 2.5px;
  }

  .work-item {
    width: calc(100% / 12 * 12 - 0px);
  }

  .team-inner {
    margin-left: -2.5px;
    margin-right: -2.5px;
  }

  .team-item {
    max-width: 270px;
  }

  .team-item-inner {
    margin-left: 2.5px;
    margin-right: 2.5px;
  }

  .team-item-inner {
    width: calc(100% - 5px);
  }

  .team-item-inner {
    padding: 20px;
  }

  .footer-item {
    margin-left: 2.5px;
    margin-right: 2.5px;
  }

  .footer-item {
    width: calc(100% - 5px);
  }

  .degubGrid > div {
    padding-left: 5px;
    padding-right: 5px;
  }

  .degubGrid > div {
    padding-left: 5px;
    padding-right: 5px;
  }

  .degubGrid > div > div {
    margin-left: -2.5px;
    margin-right: -2.5px;
  }

  .degubGrid > div > div > div {
    margin-left: 2.5px;
    margin-right: 2.5px;
  }

  .degubGrid > div > div > div {
    width: calc(8.333333333333334% - 5px);
  }

  .wrapper {
    padding-left: 5px;
    padding-right: 5px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
